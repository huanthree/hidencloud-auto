# .github/workflows/renew.yml
name: HidenCloud Auto Renew

on:
  # 允许在 Actions 页面手动触发此工作流，方便调试和立即执行
  workflow_dispatch:

  schedule:
    # 使用 cron 表达式设置定时任务
    # 此处设置为每7天在 UTC 时间 02:00 执行一次
    # 你可以根据需要修改时间，例如 '0 4 */7 * *' 表示每7天的 4:00 执行
    - cron: '0 2 */7 * *'

jobs:
  renew-job:
    runs-on: ubuntu-latest
    
    # 设置任务的总体超时时间，防止意外卡死
    timeout-minutes: 15

    steps:
      # 步骤 1: 检出你的代码库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # 指定 Python 版本

      # 步骤 3: 安装 Playwright 及其浏览器依赖
      # Playwright 需要下载浏览器内核，所以这一步是必须的
      - name: Install Playwright and dependencies
        run: |
          pip install playwright
          python -m playwright install --with-deps chromium

      # 步骤 4: 执行续费脚本
      - name: Run Renew Script
        # 通过 env 关键字将 GitHub Secrets 安全地传递给脚本作为环境变量
        env:
          HIDENCLOUD_COOKIE: ${{ secrets.HIDENCLOUD_COOKIE }}
          HIDENCLOUD_EMAIL: ${{ secrets.HIDENCLOUD_EMAIL }}
          HIDENCLOUD_PASSWORD: ${{ secrets.HIDENCLOUD_PASSWORD }}
        # 使用 -u 参数来禁用 Python 的输出缓冲，确保日志可以实时显示在 Actions 控制台中
        run: python -u renew_service.py

      # 步骤 5: (可选) 如果任务失败，上传截图作为调试依据
      # `if: failure()` 表示仅在前面的步骤失败时才执行此步骤
      - name: Upload error artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshots-and-logs
          # 上传所有生成的 .png 截图文件
          path: |
            *.png
